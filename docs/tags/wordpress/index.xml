<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>WordPress - 标签 - 闲云的博客</title>
    <link>http://idlercloud.xyz/tags/wordpress/</link>
    <description>WordPress - 标签 - 闲云的博客</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 11 Aug 2022 11:21:45 &#43;0800</lastBuildDate><atom:link href="http://idlercloud.xyz/tags/wordpress/" rel="self" type="application/rss+xml" /><item>
  <title>「个人博客建站笔记」2.网站的布局</title>
  <link>http://idlercloud.xyz/posts/tech/blog_site_note_2/</link>
  <pubDate>Thu, 11 Aug 2022 11:21:45 &#43;0800</pubDate>
  <author>idlercloud</author>
  <guid>http://idlercloud.xyz/posts/tech/blog_site_note_2/</guid>
  <description><![CDATA[<p>本文讲述<strong>如何优化 WordPress 网站的界面布局</strong>。</p>
<ul>
<li>涉及内容：网站后台、主题、PHP、HTML、CSS。</li>
<li>面向人群：新手。</li>
<li>前置知识：WordPress 网站的搭建（见<a
  href="https://idlercloud.fun/posts/blog_site_note_1"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>「个人博客建站笔记」——1.网站建成</a>）。</li>
</ul>
<h2 id="网站后台">网站后台</h2>
<p>如果你刚刚搭建好一个 WordPress 网站，那么此时你应该得到了一个默认主题下的主页，只有一个示例页面。</p>
<p>此时网页的功能很简陋，几乎只能写写文章，发发评论。像什么标签、分类、留言板都没有。而且默认的主题可能和你的审美对不上，还有标题字体太小、主页面背景不好等问题。</p>
<p>那么就需要利用网站的后台进行一些自定义的设置了。</p>
<p>点击左上角仪表盘的标志，或者在你网址的后方加上 <code>/wp-admin</code>，就可以进入后台。</p>
<p>后台左侧的菜单里有很多选项，这里不一一细讲。</p>
<p>不过值得一提的是，在默认的主题下，你可以在外观-编辑器（beta 版）里可视化地调整页面布局，这一点还是很方便的。外观-自定义是另一个方便的工具，也是可以即时预览你的修改的，你还可以在里面设置网站的名称、副标题和图标。</p>
<p>当然，上述修改大多只是小幅微调，想要有大的整体页面上的变化，需要你进行很多很细致的调整。真正一步到位，改变整个网站的是接下来介绍的主题。</p>
<h2 id="主题">主题</h2>
<p>如同很多软件一样， WordPress 同样有主题系统。它的主题不仅改变网页的样式，还会更改网页的交互逻辑，比如，如何登录、如何评论等等。</p>
<p>在后台的外观-主题页面里，你可以在线搜索主题，也可以上传一个 zip 包压缩的主题。主题的推荐可以去知乎等地求解。就我所知许多开发者会在 Github 上开源他们的主题，我之前用的 WordPress 主题就是 <a
  href="https://github.com/dimpurr/Clearision"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>Github 上面</a>下载，然后自己做了一些修改。</p>
<p>一些比较完善的主题会提供友好的界面来让你进行一定程度的定制，而无需写代码。如果你没有什么代码基础，那么还是建议仔细挑选一个这样的主题。不过再如何完善，其自由度也很难及得上写代码。</p>
<p>大多数时候，用好主题就可以得到一个令人满意的优美网站，不过如果你还想要更多、更个性化的定制，那么你可以继续往下阅读，我会讲一些前端和后端相关的代码处理。而如果你不想写代码，可以跳到最后，我会推荐一些个人感觉不错的免费主题。</p>
<h2 id="html">HTML</h2>
<p>一般地，网页本质上都是 HTML 代码构成的。</p>
<p>HTML 中文名称超文本标记语言(Hyper Text Markup Language)，听上去很厉害，其实所谓超文本就是说，它能够表达的内容不单单是文本。</p>
<p>如下代码就表示一个文字内容为“只能按”的按钮。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">button</span><span class="p">&gt;</span>只能按<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>它真正表现在网页上就是这个样子：<button>只能按</button>。</p>
<p>层层嵌套的 HTML 代码，可以生成功能十分丰富的网页。</p>
<p>比如你现在看的这个网页，你可以在空白处右键，可能就会有“查看网页源代码”的选项。你将会在其中看到整个网页的 HTML 形式，如果你将它复制下来存到本地再打开，完全可以得到一个一模一样的网页。</p>
<p>当然，只是看上去一样，实际上去你去点那些按钮，可能都是毫无反应的，因为网页系统往往是由很多个 HTML 文件构成，而且还会依托其它的一些东西。</p>
<p>比如说，CSS，或称层叠样式表(Cascading Style Sheets)。</p>
<h2 id="css">CSS</h2>
<p>HTML 描述网站的内容，但它对于内容的样式、形貌的表达力是比较薄弱的。</p>
<p>比如你想要控制刚刚那个按钮，它背景色什么样子、前景色什么样子、字号多大，距离右边框多远等等。HTML 很难完成这些，而这就是 CSS 发光发热的领域了。</p>
<blockquote>
<p>事实上，你应该很少会需要写 HTML 代码，因为它是主管内容的——而我们有更好的、可视化的方式来管理内容，比如 markdown 或者是 WordPress 自带的编辑器。相对来说你可能会和 CSS 打更多交道，它是主管外貌的。</p>
</blockquote>
<h2 id="php">PHP</h2>
<p>如果按照程序员的分类，HTML 和 CSS 所作的都是“前端”的工作，简单来说就是直接呈现在用户视觉上的效果。</p>
<blockquote>
<p>其实，传统的前端开发是使用 HTML+CSS+JavaScript 三件套的。不过我对 JS 目前没有太多了解，就先不写了。</p>
</blockquote>
<p>而这背后，当然还需要一个工具人，处理网页和服务器之间的数据交换。</p>
<p>PHP 是一个后端开发的语言。</p>
<p>目前我最常用到 PHP 的场景，其实是需要做条件判断的时候。比如用户是否登录，肯定是要展现不一样的界面的；还有就是根据权限隐藏掉一部分不太好展示的东西。</p>
<h2 id="例子clearision">例子：Clearision</h2>
<p>Clearision 是之前本站的主要主题。它相对来说功能比较简陋，但是界面我蛮喜欢的。</p>
<p>而且功能简陋，所以代码逻辑也比较好理解、好修改。</p>
<p>所以接下来我就以它为例子，讲一讲怎么自定义主题。</p>
<h3 id="主题提供的设置">主题提供的设置</h3>
<p>正如大部分主题，Clearision 在后台提供了一些设置方便自定义网页的外观和交互。如下：</p>
<p></p>
<p>在这里你可以设置主页上的 Logo 头像、网页的图标、社交主页的网址、是否显示访客环境、是否显示作者等。</p>
<p>整体而言功能不多。</p>
<h3 id="修改主题文件">修改主题文件</h3>
<p>接下来是比较关键的部分。在 Clearision 设置的下方，可以看到主题文件编辑器。</p>
<p></p>
<p>是的，接下来就需要修改代码了。</p>
<p>首先要提一点的是，Wordpress 官方推荐使用子主题的方式来自己修改主题，这样的好处是如果原主题更新了，不会覆盖掉自定义的内容。方法可以在 wordpress 的教程里找到。</p>
<p>对于 Clearision 没有这个必要，一来是原主题已经很久没更新过了，估计以后也不会更新了，二来是子主题的方案还是会导致一些问题（如缓存等）。</p>
<p>我们直接在原文件里更改就行。也就是上图右侧那些主题文件。有些文件的中文会指出它的用处。</p>
<p>这些文件的加载顺序、逻辑结构也是很有讲究的，这里不深究，有兴趣可以去自行搜索。</p>
<p><code>functions.php</code> 和 <code>style.css</code> 是我经常打交道的两个。</p>
<p><code>functions.php</code> 添加一些功能性的操作。比如说我想修改用户注销之后跳转的界面，就可以在里面加入如下内容</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1"># 注销后重定向至
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">add_action</span><span class="p">(</span><span class="s1">&#39;wp_logout&#39;</span><span class="p">,</span><span class="s1">&#39;auto_redirect_after_logout&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">function</span> <span class="nf">auto_redirect_after_logout</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">	<span class="nx">nocache_headers</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="nx">wp_safe_redirect</span><span class="p">(</span> <span class="nx">home_url</span><span class="p">()</span> <span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">exit</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>它也可以用来修改一部分的外观内容，主要是是否展示，而不管其细节。</p>
<p>而正如上面所言，<code>style.css</code> 主管整个网站的所有样式细节。</p>
<p>比如我想修改用户“发表评论”按键的样式，就可以这么写。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="line"><span class="cl"><span class="c">/* 发表评论的样式 */</span>
</span></span><span class="line"><span class="cl"><span class="p">#</span><span class="nn">cmt_submit</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">margin</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kp">-moz-</span><span class="k">box-sizing</span><span class="p">:</span> <span class="kc">border-box</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kp">-webkit-</span><span class="k">box-sizing</span><span class="p">:</span> <span class="kc">border-box</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">box-sizing</span><span class="p">:</span> <span class="kc">border-box</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kp">-webkit-</span><span class="k">border-radius</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">border-radius</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">background</span><span class="p">:</span> <span class="mh">#6f6f6f</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">color</span><span class="p">:</span> <span class="mh">#eee</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">font-weight</span><span class="p">:</span> <span class="mi">600</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">display</span><span class="p">:</span> <span class="kc">inline-block</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">border</span><span class="p">:</span> <span class="kc">none</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">cursor</span><span class="p">:</span> <span class="kc">pointer</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kp">-webkit-</span><span class="k">border-radius</span><span class="p">:</span> <span class="mi">3</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">border-radius</span><span class="p">:</span> <span class="mi">3</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>语法部分我不讲，去找些教程有点基本的了解即可。</p>
<p>另外，CSS 中是可以重复定义一个元素（部件）的样式的。Clearision 原作者在 CSS 里面写了很多内容，如果想要修改怎么办？无需找到相关的内容然后修改，只要在最下方新添样式就可以了。后定义的样式会覆盖先定义的样式。</p>
<p>你可能在 CSS 编辑界面上方看到提示，说可以在“内建的 CSS 编辑器”中修改 CSS。</p>
<p>这个实际上就是我上面提到的外观-自定义里面的一个小功能，所谓的额外 CSS。界面大致如下：</p>
<p></p>
<p>在左侧的文本框中输入的 CSS 代码，会实时地同步到右侧的网页中，对于调整外观来说十分方便。</p>
<p>这个功能配上浏览器提供的“检查”（审核元素、开发者工具、F12）会如虎添翼。只需在想要修改样式的地方右键-&gt;检查，就会出现类似下面的界面（这是 Edge 浏览器的界面）</p>
<p></p>
<p>在右侧的开发者工具中就可以查看网页的 HTML 代码和 CSS 样式，甚至可以直接在里面修改。</p>
<p>你可能会说了，不会写代码怎么办？其实我也不是很会，CSS 和 PHP 我都没有系统学习过。大部分的代码其实都来自于网络，只要可以合理描述自己的需求，还是能够找到想要的内容的。</p>
<p>但是完全不会写代码还是很不便的。网上的代码质量参差不齐，而且可能有过期风险，也可能面临不同浏览器、不同屏幕分辨率等一系列问题。复制代码之后可能会还需要一些微调来解决这些问题。所以有更高需求的话建议还是沉下心来细细学习一下，总之不会亏。</p>
<h2 id="主题推荐">主题推荐</h2>
<p>下面是我用过的，比较适合个人博客的两款主题，都是简约风的。</p>
<p>就算你打算自定义主题，我也推荐你下载几个美观的主题看看。它们会给你增添灵感，而且你可以参考它们的代码实现。</p>
<h3 id="mdx">MDX</h3>
<p>这是我个人比较喜欢的另一个主题。功能丰富，界面简洁美观。如果我最先接触到它的话，也许就会使用它。</p>
<p><a
  href="https://mdx.flyhigher.top/"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>主题主页</a>，<a
  href="https://github.com/yrccondor/mdx"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>Github 仓库</a></p>
<p>主题主页里有详细的展示，我建议你可以稍微看一下。下面我也会放一些本站使用该主题后的样貌。</p>
<p>首页：</p>
<p></p>
<p>文章：</p>
<p></p>
<p>这里我没有仔细去调整，实际上，在后台中有非常多的主题样式搭配。如图。</p>
<p></p>
<p>在我短暂的使用中，有两个功能让我很喜欢。</p>
<p>一个是开启夜间模式，另一个是目录。</p>
<p>现在的这个主题已经支持这两个特性了，很好用。（本站已经不是用 WordPress 而是 Hugo 了）</p>
<h3 id="indite">Indite</h3>
<p>这个主题可以直接在 Wordpress 后台里添加。</p>
<p>大致外观如下：</p>
<p></p>
<p>可以看到配色比较柔和，页面也很简洁。</p>
<p>这个主题的大部分功能都可以通过外观-自定义修改。不过里面的设置都是英文的，可能需要花些力气。</p>
<p>另外一点不太好的是，这个边栏太大了，影响阅读体验。</p>
<h2 id="总结">总结</h2>
<p>这就是本文的所有内容了。断断续续拖了一个月才完成，着实有些难写。</p>
<p>想写的内容其实还有很多，但是难以表述出来。如果有疑问的话欢迎评论区里提问。</p>
<blockquote>
<p>版权声明：本文采用 <a
  href="http://creativecommons.org/licenses/by/4.0/"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>CC BY 4.0</a> 进行许可，转载请注明出处。</p>
<p>本文链接：<a
  href="https://idlercloud.fun/posts/blog_site_note_2/"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>https://idlercloud.fun/posts/blog_site_note_2/</a></p>
</blockquote>]]></description>
</item><item>
  <title>「个人博客建站笔记」1.网站建成</title>
  <link>http://idlercloud.xyz/posts/tech/blog_site_note_1/</link>
  <pubDate>Wed, 10 Aug 2022 18:41:49 &#43;0800</pubDate>
  <author>idlercloud</author>
  <guid>http://idlercloud.xyz/posts/tech/blog_site_note_1/</guid>
  <description><![CDATA[<p>这是我在以前博客的第一篇文章，主要记述的是使用 WordPress 和宝塔 Linux 面板，从零开始搭建一个基础博客网站的过程。</p>
<ul>
<li>涉及内容：服务器、域名、域名解析、宝塔 Linux 面板、wordpress 的使用。</li>
<li>面向人群：纯新手，无基础。</li>
<li>前置知识：中文，部分英文。基础网络知识：如 IP 地址是什么，GB、Mbps 是什么单位。基础计算机知识：CPU、内存、硬盘空间是什么，能区分硬件和软件。</li>
</ul>
<blockquote>
<p>旧博客的建成，包括下述内容，有很大一部分是  <a
  href="https://tofu.icu/"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>TriNitroTofu</a>  的功劳，大家有兴趣可以去看看。</p>
</blockquote>
<h2 id="基础概念">基础概念</h2>
<p>为了得到一个可以访问的网站，我们至少需要三个东西：</p>
<ol>
<li>服务器</li>
<li>域名</li>
<li>网站系统</li>
</ol>
<p>网站系统运行在服务器上，提供一个交互的界面，而别人就可以通过域名来访问网站，这就是三者的关系。</p>
<p>不用域名，直接使用 IP 地址进行访问似乎也是可行的，不过可想而知，那样也太劝退用户了。</p>
<p>下面就分别简单介绍一下这三个东西。</p>
<h2 id="服务器">服务器</h2>
<p>首先是挑选一个合格的服务器，这是三者之中最贵的一个。</p>
<h3 id="服务器的位置">服务器的位置</h3>
<p>服务器根据位置分为中国大陆和其他的。</p>
<p>中国大陆的服务器，如阿里云、华为云之类的，访问速度快，而且也比较便宜，但是最大的问题是需要进行<strong>备案</strong>。据说备案至少需要一个月，多则几个月，显然太缓慢了。</p>
<blockquote>
<p>据我所知阿里云有一些学生优惠，免费体验建站的，而且后续也蛮便宜</p>
</blockquote>
<p>至于其他的服务器，近的如日本、新加坡，远的如美国，到处都有。它们相对于大陆的服务器来说贵一些、延迟高一些，但好处是无需备案。</p>
<blockquote>
<p>我本来以为海外的服务器会被墙，实际上并非如此。不干坏事的话应该没问题。</p>
</blockquote>
<p>我选择的是其他服务器。</p>
<h3 id="服务器的配置">服务器的配置</h3>
<p>服务器的选择有很多讲究。</p>
<p>一是<strong>硬件配置</strong>。想要带得动一个能用的动态博客，至少需要 1.5G 及以上内存。1G 内存应该是比较危险的。CPU 要求不高的样子，我的 CPU 使用率一般都很低。然后就是硬盘空间，一般而言文字类博客也用不了太多，图片的话其实可以用图床。</p>
<p>二是<strong>网络配置</strong>。主要是流量和带宽，还有一个线路问题。首先是流量，我看到过别人的个人博客，一个月总共 30G 也用了很长一段时间了，需求量其实不算很大。带宽的话，个人博客网站应该是不需要多大的，知乎上有说 1M 宽带就够了的。还有一个线路问题，这个我不是很懂，据说 cn2 线路更快。买服务器的时候可能它不会直接提到线路，但是如果有 &ldquo;Asia/China Optimization&rdquo; 之类的字样，应该就是 cn2 线路的。</p>
<blockquote>
<p>目前我的网站平均占用 1G 左右内存，硬盘 5.6G。20 号建站到 23 号早晨为止，一共用了 1.4G 左右流量，大部分流量是在建站时候花费的，后面用的很少，</p>
</blockquote>
<p>三是<strong>系统</strong>。主要是 Linux 还是 Windows 的区别，目前我所见的基本都是 Linux，所以最好对 Linux 系统有一些基本的了解，无需太深入。Linux 又分为很多发行版，新人的话推荐用 Ubuntu 20.04。</p>
<h3 id="服务商的选择及服务器购买">服务商的选择及服务器购买</h3>
<p>以上知识了解了，我们可以开始考虑服务商了。国外的服务商我只知道两家，<a
  href="https://www.dmit.io/"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>DMIT</a> 和 <a
  href="https://www.vultr.com/"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>vultr</a>。前者贵一些，但是有 cn2 线路。后者未接入 cn2 线路，但是不仅便宜，而且还是按小时收费的。我选的是前者，这里简单介绍一下流程，可以跳过。</p>
<p>进入 <a
  href="https://www.dmit.io/"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>DMIT</a> 的网站，注意右上角可以选择中文（不过是繁体）。创建账户进入客户中心，然后点击左上角的创建，选择伺服器。接下来就可以选服务器了。建议货比三家，仔细看看。注意有的是<strong>季缴</strong>有的是<strong>月缴</strong>。</p>
<p>选好套餐后点击右下角的继续，下一页是命名主机、设置 root 密码（root 相当于超级用户，拥有所有权限）、选择系统之类的，自己决定就好。然后就是喜闻乐见的付款环节了，结算页面的右侧有一个小框写着“Apply Promo Code”，这个是输优惠码的，如果你是在促销时候买，可能有折扣哦。</p>
<p>启动蓝色修改器，支付完毕后，服务器这一块暂时没什么问题了。</p>
<p>哦对了，查看服务器的时候，一般服务商会发给你公钥和私钥文件，注意私钥文件应该是只会出现一次的，下载后<strong>一定要做好备份，千万别丢了</strong>。丢了的话，不出意外就是丢失对服务器的控制权了，我不知道联系客服能不能解决问题。</p>
<h2 id="域名">域名</h2>
<h3 id="域名分类">域名分类</h3>
<p>作为一个互联网熟练用户，你应该已经见过不少域名后缀（学名叫顶级域名）了，像什么 <code>.com</code>、<code>.cn</code>、<code>.org</code> 乃至本站的 <code>.xyz</code>。</p>
<p>这些域名也是稍有不同的。</p>
<p>首先，搜索引擎对于不同域名的收录效率是不一样的。像是 <code>.com</code> 这种几十年的老域名，相对来说是快一些的；而<code>.top</code>、<code>.xyz</code>这些新兴域名，可能要慢一些。</p>
<p>其次，不同域名的价格可以差很多。不过一般来说按年租的话比服务器便宜很多。</p>
<p>然后就是，据说 <code>.cn</code> 需要备案（也许因为它是中国顶级域名），但是也有人说不需要，这个我不太清楚。</p>
<h3 id="域名购买">域名购买</h3>
<p>国内的话，可以在阿里云、百度云、华为云这些地方买。</p>
<p>而国外呢，我所知道的有 <a
  href="https://godaddy.com/"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>GoDaddy</a>、<a
  href="https://www.name.com/zh-cn/"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>name.com</a>、<a
  href="https://www.namesilo.com/"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>namesilo</a>、<a
  href="https://www.namecheap.com/"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>namecheap</a>。</p>
<p>我只知道 GoDaddy 是老牌子，而 name.com 便宜些。后两个只是听说性价比不错。我个人选择的是 name.com，它的名气似乎不是很大，以至于中文互联网上没找到什么教程。我就假设你是用的 name.com 了，其他网站的操作也差不了多少。</p>
<p>在购买域名之前，你需要先决定好网站的地址。顶级域名就那么些，你只能从中选，但是二级域名是由你决定的，如 <code>idlercloud.fun</code>。有些域名可能已经被人注册了，这时候可能你就只能换一个了，如果你实在很想要那个域名，那就得想办法联系拥有者商量了。</p>
<p>决定好域名，支付完成后，别着急，域名相关的东西还有下一个呢。</p>
<blockquote>
<p>买域名的时候，除去域名本身的费用外，还可能附加一些安全和隐私相关的内容。这部分买不买就取决于你了。不过 SSL 证书之后可以弄到免费的。</p>
</blockquote>
<h3 id="域名解析">域名解析</h3>
<p>域名购买好了。但是现在的问题是，这个域名和我们先前买好的服务器有任何关系吗？没有，在不同的商家买的两个东西，哪有什么关系。</p>
<p>接下来讲的就是把这两个东西联系起来，也就是所谓的 DNS 解析。</p>
<blockquote>
<p>简单理解一下 DNS 解析。你的服务器有个 IP 地址，假设是 123.123.123.123，然后你有个域名 <code>xxx.com</code>。DNS 解析要做的就是，当用户在浏览器地址栏输入 <code>xxx.com</code> 时，自动让用户访问 123.123.123.123 这个服务器的网站。</p>
</blockquote>
<p>购买好域名，进入后台，点进域名的界面。</p>
<blockquote>
<p>具体操作 (name.com)：右上角的用户图标下拉菜单点击 overview（概览），在下面找到自己的域名，如 <code>idlercloud.fun</code>，点进去。</p>
</blockquote>
<blockquote>
<p>另外，name.com 的最下方是可以选择语言的。</p>
</blockquote>
<p>差不多是下面这样一个界面。</p>
<p></p>
<p>点击上图框红的 &ldquo;Manage DNS Records&rdquo;（管理 DNS 记录）。可以看到下面的界面。</p>
<p></p>
<p>&ldquo;HOST&rdquo;（主机）就是你的网站地址，加不加 <code>www</code> 无所谓。而 &ldquo;ANSWER&rdquo;（回答）就写服务器的 IP 地址（可以在服务器商那里看到）。填好之后添加记录，OK，目前关于域名要做的就这么多。</p>
<h2 id="网站系统">网站系统</h2>
<p>网站系统，或者在我们这里更具体一些，博客系统。它控制网站的界面展示，用户和网站的交互，网站数据的存取等。</p>
<h3 id="网站系统的选取">网站系统的选取</h3>
<p>本站（之前）用的网站系统是 WordPress。</p>
<p>还有一个常用的是 typecho。我只听说过，下述对比也只是综合我所看到的评价。</p>
<blockquote>
<p>相对而言 WordPress 的功能更丰富，不过没有原生 markdown 支持。typecho 定位是纯粹的个人博客系统，而非 wordpress 这样的 CMS，所以相对来说更简洁一些。如果服务器配置不够，也许可以试试 typecho。</p>
</blockquote>
<blockquote>
<p>此外，推广一波 TriNitroTofu 大佬自己写的博客系统，<a
  href="https://github.com/trinitrotofu/December"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>December</a></p>
</blockquote>
<p>我们这里选用 wordpress，不过在此之前还需要先对服务器进行一些操作，让它更好用一些。</p>
<h3 id="连接服务器以及宝塔-linux-面板的使用">连接服务器以及宝塔 Linux 面板的使用</h3>
<p>购买好服务器之后，除了得到一个光秃秃的 IP 地址和后台的一些资源使用情况，我们所能做的最多其实也就是开机、关机、重启之类的。</p>
<p>所以需要想办法先连接上服务器，我们采用 SSH 连接的方式。</p>
<p>Windows 下需要用到一个叫做 PuTTY 的软件。这是<a
  href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>官网下载地址</a>。</p>
<p>
</p>
<p>启动后，在上面的红框 1 中输入服务器的 IP 地址，然后在左侧找到红框 2 中的 <code>Auth</code>（依次点击 <code>Connection-&gt;SSH-&gt;Auth</code>）。</p>
<p>然后点击红框 3 中，找到之前保存的服务商给你的服务器的私钥文件。</p>
<p>接着就可以点击 <code>open</code> 进行连接。</p>
<blockquote>
<p>PuTTY 似乎不会默认为你记住当前的配置，你下一次打开还需要再输一遍 IP，再选一遍私钥。解决方法是在首页 <code>Session</code> 那里的 <code>Saved Sessions</code> 给当前会话取个名，然后点右边的 <code>save</code> 保存，下次就可以双击会话名，或者点击 <code>load</code> 后再打开了。</p>
</blockquote>
<p>打开后就是一个命令行界面。它询问 <code>login as</code>，输入 <code>root</code> 回车即可。现在你就正式登录到服务器上了，你可以在命令行中通过命令操作服务器里的系统。</p>
<p>接下来安装宝塔 Linux 面板。</p>
<blockquote>
<p>Linux 面板用于提供一个方便的界面，以可视化地管理服务器。宝塔面板还有很多关于网站维护的工具，非常好用。</p>
</blockquote>
<p>在命令行中输入 <code>wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</code>。</p>
<p>等到服务器处理完之后，注意它应该会输出一些内容，像是外网面板地址、内网面板地址、初始默认用户密码之类的。将面板地址复制到浏览器打开（哪个能用用哪个），输入命令行里提供的用户名和密码。然后就能看到一个面板页面。</p>
<blockquote>
<p>如果不慎关闭了命令行也没关系。重新打开命令行，在其中输入 <code>bt</code> 命令，会有中文的提示指引，输入编号选择查看默认信息即可。</p>
</blockquote>
<p>第一次进入面板，它应该会提示你安装一堆东西，像什么 Apache、mysql、php 之类的。根据 WordPress 的建议，mysql 版本最好选用 5.6+，php 版本最好选用 7.4（之后再更新也是可以的）。安装这些会花很长一段时间，慢慢等待即可。</p>
<p>然后需要将你的网站添加到宝塔面板上，在面板的左侧的“网站”里添加网站即可。记得 FTP、数据库都选创建，PHP 版本选到 7.4 及以上即可。这一步比较简单，不再赘述。</p>
<blockquote>
<p>另外，在这一个界面上可以给网站配置 SSL 证书，最好打开强制 HTTPS。另外建议把面板的 SSL 也开了，在面板的设置里面就有。不过开了之后浏览器可能反而告诉你站点不安全，甚至有可能拦截你。我们不管它就好。</p>
</blockquote>
<h3 id="wordpress-的安装">wordpress 的安装</h3>
<p>这个参考<a href="https://blog.naibabiji.com/tutorial/bao-ta-an-zhuang-wordpress.html" target="_blank" rel="noopener">这篇教程</a>即可，写得很详细了。</p>
<h2 id="总结">总结</h2>
<p>完成上面这些步骤，就可以在浏览器里通过域名访问网页了。你将会看到 wordpress 默认主题下的首页。</p>
<p>撒花庆祝ヾ(≧▽≦*)o。</p>
<p>如果有什么疑问的话请在评论说明，我会尽我所能解答的。</p>
<blockquote>
<p>版权声明：本文采用 <a
  href="http://creativecommons.org/licenses/by/4.0/"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>CC BY 4.0</a> 进行许可，转载请注明出处。</p>
<p>本文链接：<a
  href="https://idlercloud.fun/posts/blog_site_note_1/"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>https://idlercloud.fun/posts/blog_site_note_1/</a></p>
</blockquote>]]></description>
</item></channel>
</rss>
